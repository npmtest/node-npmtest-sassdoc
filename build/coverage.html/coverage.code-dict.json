{"/home/travis/build/npmtest/node-npmtest-sassdoc/test.js":"/* istanbul instrument in package npmtest_sassdoc */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireExampleJsFromReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-sassdoc/lib.npmtest_sassdoc.js":"/* istanbul instrument in package npmtest_sassdoc */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_sassdoc = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_sassdoc = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-sassdoc/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-sassdoc && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_sassdoc */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_sassdoc\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_sassdoc.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_sassdoc.rollup.js'] =\n            local.assetsDict['/assets.npmtest_sassdoc.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_sassdoc.__dirname + '/lib.npmtest_sassdoc.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-sassdoc/node_modules/sassdoc/index.js":"'use strict'\n\nvar sassdoc = require('./dist/sassdoc')\n\nmodule.exports = sassdoc.default\nmodule.exports.parseFilter = sassdoc.parseFilter\nmodule.exports.ensureEnvironment = sassdoc.ensureEnvironment\nmodule.exports.parse = sassdoc.parse\nmodule.exports.Environment = sassdoc.Environment\nmodule.exports.Logger = sassdoc.Logger\nmodule.exports.Parser = sassdoc.Parser\nmodule.exports.sorter = sassdoc.sorter\nmodule.exports.errors = sassdoc.errors\n","/home/travis/build/npmtest/node-npmtest-sassdoc/node_modules/sassdoc/dist/sassdoc.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.errors = exports.sorter = exports.Parser = exports.Logger = exports.Environment = undefined;\n\nvar _getOwnPropertyNames = require('babel-runtime/core-js/object/get-own-property-names');\n\nvar _getOwnPropertyNames2 = _interopRequireDefault(_getOwnPropertyNames);\n\nvar _find = require('babel-runtime/core-js/array/find');\n\nvar _find2 = _interopRequireDefault(_find);\n\nvar _stringify = require('babel-runtime/core-js/json/stringify');\n\nvar _stringify2 = _interopRequireDefault(_stringify);\n\nvar _promise = require('babel-runtime/core-js/promise');\n\nvar _promise2 = _interopRequireDefault(_promise);\n\nvar _regenerator = require('babel-runtime/regenerator');\n\nvar _regenerator2 = _interopRequireDefault(_regenerator);\n\nvar _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');\n\nvar _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);\n\n/**\n * Source directory fetching and parsing.\n */\nvar baseDocumentize = function () {\n  var _ref4 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee4(env) {\n    var filter, streams, pipeline;\n    return _regenerator2.default.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            filter = parseFilter(env);\n\n\n            filter.promise.then(function (data) {\n              env.logger.log('Folder `' + env.src + '` successfully parsed.');\n              env.data = data;\n              onEmpty(data, env);\n\n              env.logger.debug(function () {\n                _fs2.default.writeFile('sassdoc-data.json', (0, _stringify2.default)(data, null, 2) + '\\n');\n\n                return 'Dumping data to `sassdoc-data.json`.';\n              });\n            });\n\n            streams = [_vinylFs2.default.src(env.src), (0, _recurse2.default)(), (0, _exclude2.default)(env.exclude || []), (0, _sassConvert2.default)({ from: 'sass', to: 'scss' }), filter];\n\n            pipeline = function pipeline() {\n              return new _promise2.default(function (resolve, reject) {\n                _multipipe2.default.apply(undefined, streams.concat([function (err) {\n                  return err ? reject(err) : resolve();\n                }])).resume(); // Drain.\n              });\n            };\n\n            _context4.prev = 4;\n            _context4.next = 7;\n            return pipeline();\n\n          case 7:\n            _context4.next = 13;\n            break;\n\n          case 9:\n            _context4.prev = 9;\n            _context4.t0 = _context4['catch'](4);\n\n            env.emit('error', _context4.t0);\n            throw _context4.t0;\n\n          case 13:\n            return _context4.abrupt('return', env.data);\n\n          case 14:\n          case 'end':\n            return _context4.stop();\n        }\n      }\n    }, _callee4, this, [[4, 9]]);\n  }));\n\n  return function baseDocumentize(_x5) {\n    return _ref4.apply(this, arguments);\n  };\n}();\n\n/**\n * Return a function taking optional `src` string or array, and optional\n * `env` object (arguments are found by their type).\n *\n * If `src` is set, proxy to `documentize`, otherwise `stream`.\n *\n * Both functions will be passed the `env` object, which will have a\n * `src` key.\n */\n\n\nexports.parseFilter = parseFilter;\nexports.ensureEnvironment = ensureEnvironment;\nexports.default = sassdoc;\nexports.parse = parse;\n\nvar _utils = require('./utils');\n\nvar _environment = require('./environment');\n\nvar _environment2 = _interopRequireDefault(_environment);\n\nvar _logger = require('./logger');\n\nvar _logger2 = _interopRequireDefault(_logger);\n\nvar _parser = require('./parser');\n\nvar _parser2 = _interopRequireDefault(_parser);\n\nvar _errors = require('./errors');\n\nvar errors = _interopRequireWildcard(_errors);\n\nvar _sorter = require('./sorter');\n\nvar _sorter2 = _interopRequireDefault(_sorter);\n\nvar _exclude = require('./exclude');\n\nvar _exclude2 = _interopRequireDefault(_exclude);\n\nvar _recurse = require('./recurse');\n\nvar _recurse2 = _interopRequireDefault(_recurse);\n\nvar _fs = require('fs');\n\nvar _fs2 = _interopRequireDefault(_fs);\n\nvar _path = require('path');\n\nvar _path2 = _interopRequireDefault(_path);\n\nvar _lodash = require('lodash.difference');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _safeWipe = require('safe-wipe');\n\nvar _safeWipe2 = _interopRequireDefault(_safeWipe);\n\nvar _vinylFs = require('vinyl-fs');\n\nvar _vinylFs2 = _interopRequireDefault(_vinylFs);\n\nvar _sassConvert = require('sass-convert');\n\nvar _sassConvert2 = _interopRequireDefault(_sassConvert);\n\nvar _multipipe = require('multipipe');\n\nvar _multipipe2 = _interopRequireDefault(_multipipe);\n\nvar _through = require('through2');\n\nvar _through2 = _interopRequireDefault(_through);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar mkdir = (0, _utils.denodeify)(require('mkdirp'));\n\n/**\n * Expose lower API blocks.\n */\nexports.Environment = _environment2.default;\nexports.Logger = _logger2.default;\nexports.Parser = _parser2.default;\nexports.sorter = _sorter2.default;\nexports.errors = errors;\n\n/**\n * Boostrap Parser and AnnotationsApi, execute parsing phase.\n * @return {Stream}\n * @return {Promise} - as a property of Stream.\n */\n\nfunction parseFilter() {\n  var env = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  env = ensureEnvironment(env);\n\n  var parser = new _parser2.default(env, env.theme && env.theme.annotations);\n\n  return parser.stream();\n}\n\n/**\n * Ensure a proper Environment Object and events.\n * @param {Object} config - can be falsy.\n * @return {Object}\n */\nfunction ensureEnvironment(config) {\n  var onError = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function (e) {\n    throw e;\n  };\n\n  if (config instanceof _environment2.default) {\n    config.on('error', onError);\n    return config;\n  }\n\n  var logger = ensureLogger(config);\n  var env = new _environment2.default(logger, config && config.verbose, config && config.strict);\n\n  env.on('error', onError);\n  env.load(config);\n  env.postProcess();\n\n  return env;\n}\n\n/**\n * @param {Object} config\n * @return {Logger}\n */\nfunction ensureLogger(config) {\n  if (!_utils.is.object(config) || !('logger' in config)) {\n    // Get default logger.\n    return new _logger2.default(config && config.verbose, process.env.SASSDOC_DEBUG);\n  }\n\n  var logger = (0, _logger.checkLogger)(config.logger);\n  delete config.logger;\n\n  return logger;\n}\n\n/**\n * Default public API method.\n * @param {String | Array} src\n * @param {Object} env\n * @return {Promise | Stream}\n * @see srcEnv\n */\nfunction sassdoc() {\n\n  /**\n   * Execute full SassDoc sequence from a source directory.\n   * @return {Promise}\n   */\n  var documentize = function () {\n    var _ref = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee(env) {\n      var data;\n      return _regenerator2.default.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              init(env);\n              _context.next = 3;\n              return baseDocumentize(env);\n\n            case 3:\n              data = _context.sent;\n              _context.prev = 4;\n              _context.next = 7;\n              return refresh(env);\n\n            case 7:\n              _context.next = 9;\n              return theme(env);\n\n            case 9:\n              okay(env);\n              _context.next = 16;\n              break;\n\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context['catch'](4);\n\n              env.emit('error', _context.t0);\n              throw _context.t0;\n\n            case 16:\n              return _context.abrupt('return', data);\n\n            case 17:\n            case 'end':\n              return _context.stop();\n          }\n        }\n      }, _callee, this, [[4, 12]]);\n    }));\n\n    return function documentize(_x3) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  /**\n   * Execute full SassDoc sequence from a Vinyl files stream.\n   * @return {Stream}\n   * @return {Promise} - as a property of Stream.\n   */\n\n\n  return srcEnv(documentize, stream).apply(undefined, arguments);\n\n  /**\n   * Safely wipe and re-create the destination directory.\n   * @return {Promise}\n   */\n  function refresh(env) {\n    return (0, _safeWipe2.default)(env.dest, {\n      force: true,\n      parent: _utils.is.string(env.src) || _utils.is.array(env.src) ? (0, _utils.g2b)(env.src) : null,\n      silent: true\n    }).then(function () {\n      return mkdir(env.dest);\n    }).then(function () {\n      env.logger.log('Folder `' + env.displayDest + '` successfully refreshed.');\n    }).catch(function (err) {\n      // Friendly error for already existing directory.\n      throw new errors.SassDocError(err.message);\n    });\n  }\n\n  /**\n   * Render theme with parsed data context.\n   * @return {Promise}\n   */\n  function theme(env) {\n    var promise = env.theme(env.dest, env);\n\n    if (!_utils.is.promise(promise)) {\n      var type = Object.prototype.toString.call(promise);\n      throw new errors.Error('Theme didn\\'t return a promise, got ' + type + '.');\n    }\n\n    return promise.then(function () {\n      var displayTheme = env.displayTheme || 'anonymous';\n      env.logger.log('Theme `' + displayTheme + '` successfully rendered.');\n    });\n  }function stream(env) {\n    var filter = parseFilter(env);\n\n    filter.promise.then(function (data) {\n      env.logger.log('Sass sources successfully parsed.');\n      env.data = data;\n      onEmpty(data, env);\n    });\n\n    /**\n     * Returned Promise await the full sequence,\n     * instead of just the parsing step.\n     */\n    filter.promise = new _promise2.default(function (resolve, reject) {\n      var documentize = function () {\n        var _ref2 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee2() {\n          return _regenerator2.default.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  _context2.prev = 0;\n\n                  init(env);\n                  _context2.next = 4;\n                  return refresh(env);\n\n                case 4:\n                  _context2.next = 6;\n                  return theme(env);\n\n                case 6:\n                  okay(env);\n                  resolve();\n                  _context2.next = 15;\n                  break;\n\n                case 10:\n                  _context2.prev = 10;\n                  _context2.t0 = _context2['catch'](0);\n\n                  reject(_context2.t0);\n                  env.emit('error', _context2.t0);\n                  throw _context2.t0;\n\n                case 15:\n                case 'end':\n                  return _context2.stop();\n              }\n            }\n          }, _callee2, this, [[0, 10]]);\n        }));\n\n        return function documentize() {\n          return _ref2.apply(this, arguments);\n        };\n      }();\n\n      filter.on('end', documentize).on('error', function (err) {\n        return env.emit('error', err);\n      }).resume(); // Drain.\n    });\n\n    return filter;\n  }\n}\n\n/**\n * Parse and return data object.\n * @param {String | Array} src\n * @param {Object} env\n * @return {Promise | Stream}\n * @see srcEnv\n */\nfunction parse() {\n\n  /**\n   * @return {Promise}\n   */\n  var documentize = function () {\n    var _ref3 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee3(env) {\n      var data;\n      return _regenerator2.default.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return baseDocumentize(env);\n\n            case 2:\n              data = _context3.sent;\n              return _context3.abrupt('return', data);\n\n            case 4:\n            case 'end':\n              return _context3.stop();\n          }\n        }\n      }, _callee3, this);\n    }));\n\n    return function documentize(_x4) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  /**\n   * Don't pass files through, but pass final data at the end.\n   * @return {Stream}\n   */\n\n\n  return srcEnv(documentize, stream).apply(undefined, arguments);function stream(env) {\n    var parseStream = parseFilter(env);\n\n    var filter = _through2.default.obj(function (file, enc, cb) {\n      return cb();\n    }, function (cb) {\n      var _this = this;\n\n      parseStream.promise.then(function (data) {\n        _this.push(data);\n        cb();\n      }, cb);\n    });\n\n    return (0, _multipipe2.default)(parseStream, filter);\n  }\n}function srcEnv(documentize, stream) {\n  return function () {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var src = (0, _find2.default)(args, function (a) {\n      return _utils.is.string(a) || _utils.is.array(a);\n    });\n    var env = (0, _find2.default)(args, _utils.is.plainObject);\n\n    env = ensureEnvironment(env);\n\n    env.logger.debug('process.argv:', function () {\n      return (0, _stringify2.default)(process.argv);\n    });\n    env.logger.debug('sassdoc version:', function () {\n      return require('../package.json').version;\n    });\n    env.logger.debug('node version:', function () {\n      return process.version.substr(1);\n    });\n\n    env.logger.debug('npm version:', function () {\n      var prefix = _path2.default.resolve(process.execPath, '../../lib');\n      var pkg = _path2.default.resolve(prefix, 'node_modules/npm/package.json');\n\n      try {\n        return require(pkg).version;\n      } catch (e) {\n        return 'unknown';\n      }\n    });\n\n    env.logger.debug('platform:', function () {\n      return process.platform;\n    });\n    env.logger.debug('cwd:', function () {\n      return process.cwd();\n    });\n\n    env.src = src;\n\n    env.logger.debug('env:', function () {\n      var clone = {};\n\n      (0, _lodash2.default)((0, _getOwnPropertyNames2.default)(env), ['domain', '_events', '_maxListeners', 'logger']).forEach(function (k) {\n        return clone[k] = env[k];\n      });\n\n      return (0, _stringify2.default)(clone, null, 2);\n    });\n\n    var task = env.src ? documentize : stream;\n    env.logger.debug('task:', function () {\n      return env.src ? 'documentize' : 'stream';\n    });\n\n    return task(env);\n  };\n}\n\n/**\n * Warn user on empty documentation.\n * @param {Array} data\n * @param {Object} env\n */\nfunction onEmpty(data, env) {\n  var message = 'SassDoc could not find anything to document.\\n\\n  * Are you still using `/**` comments ? They\\'re no more supported since 2.0.\\n    See <http://sassdoc.com/upgrading/#c-style-comments>.\\n';\n\n  if (!data.length && env.verbose) {\n    env.emit('warning', new errors.Warning(message));\n  }\n}\n\n/**\n * Init timer.\n * @param {Object} env\n */\nfunction init(env) {\n  env.logger.time('SassDoc');\n}\n\n/**\n * Log final success message.\n * @param {Object} env\n */\nfunction okay(env) {\n  env.logger.log('Process over. Everything okay!');\n  env.logger.timeEnd('SassDoc', '%s completed after %dms');\n}","/home/travis/build/npmtest/node-npmtest-sassdoc/node_modules/sassdoc/dist/utils.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.is = exports.splitNamespace = undefined;\n\nvar _typeof2 = require('babel-runtime/helpers/typeof');\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nvar _promise = require('babel-runtime/core-js/promise');\n\nvar _promise2 = _interopRequireDefault(_promise);\n\nexports.denodeify = denodeify;\nexports.defer = defer;\nexports.g2b = g2b;\n\nvar _glob2base = require('glob2base');\n\nvar _glob2base2 = _interopRequireDefault(_glob2base);\n\nvar _glob = require('glob');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Namespace delimiters.\nvar nsDelimiters = ['::', ':', '\\\\.', '/'];\nvar ns = new RegExp(nsDelimiters.join('|'), 'g');\n\n// Split a namespace on possible namespace delimiters.\nvar splitNamespace = exports.splitNamespace = function splitNamespace(value) {\n  return value.split(ns);\n};\n\nfunction denodeify(fn) {\n  return function () {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return new _promise2.default(function (resolve, reject) {\n      fn.apply(undefined, args.concat([function (err) {\n        for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n          args[_key2 - 1] = arguments[_key2];\n        }\n\n        if (err) {\n          reject(err);\n          return;\n        }\n\n        resolve.apply(undefined, args);\n      }]));\n    });\n  };\n}\n\nfunction defer() {\n  var resolve = void 0,\n      reject = void 0;\n\n  var promise = new _promise2.default(function (resolve_, reject_) {\n    resolve = resolve_;\n    reject = reject_;\n  });\n\n  return {\n    promise: promise,\n    resolve: resolve,\n    reject: reject\n  };\n}\n\n/**\n * Get the base directory of given glob pattern (see `glob2base`).\n *\n * If it's an array, take the first one.\n *\n * @param {Array|String} src Glob pattern or array of glob patterns.\n * @return {String}\n */\nfunction g2b(src) {\n  return (0, _glob2base2.default)(new _glob.Glob([].concat(src)[0]));\n}\n\n/**\n * Type checking helpers.\n */\nvar toString = function toString(arg) {\n  return Object.prototype.toString.call(arg);\n};\n\nvar is = exports.is = {\n  undef: function undef(arg) {\n    return arg === void 0;\n  },\n  string: function string(arg) {\n    return typeof arg === 'string';\n  },\n  function: function _function(arg) {\n    return typeof arg === 'function';\n  },\n  object: function object(arg) {\n    return (typeof arg === 'undefined' ? 'undefined' : (0, _typeof3.default)(arg)) === 'object' && arg !== null;\n  },\n  plainObject: function plainObject(arg) {\n    return toString(arg) === '[object Object]';\n  },\n  array: function array(arg) {\n    return Array.isArray(arg);\n  },\n  error: function error(arg) {\n    return is.object(arg) && (toString(arg) === '[object Error]' || arg instanceof Error);\n  },\n  promise: function promise(arg) {\n    return arg && is.function(arg.then);\n  },\n  stream: function stream(arg) {\n    return arg && is.function(arg.pipe);\n  },\n  vinylFile: function vinylFile(arg) {\n    return is.plainObject(arg) && arg.constructor.name === 'File';\n  }\n};","/home/travis/build/npmtest/node-npmtest-sassdoc/node_modules/sassdoc/dist/environment.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof2 = require('babel-runtime/helpers/typeof');\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nvar _keys = require('babel-runtime/core-js/object/keys');\n\nvar _keys2 = _interopRequireDefault(_keys);\n\nvar _find = require('babel-runtime/core-js/array/find');\n\nvar _find2 = _interopRequireDefault(_find);\n\nvar _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _utils = require('./utils');\n\nvar _errors = require('./errors');\n\nvar errors = _interopRequireWildcard(_errors);\n\nvar _events = require('events');\n\nvar _fs = require('fs');\n\nvar _fs2 = _interopRequireDefault(_fs);\n\nvar _path = require('path');\n\nvar _path2 = _interopRequireDefault(_path);\n\nvar _jsYaml = require('js-yaml');\n\nvar _jsYaml2 = _interopRequireDefault(_jsYaml);\n\nvar _sassConvert = require('sass-convert');\n\nvar _sassConvert2 = _interopRequireDefault(_sassConvert);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Environment = function (_EventEmitter) {\n  (0, _inherits3.default)(Environment, _EventEmitter);\n\n  /**\n   * @param {Logger} logger\n   * @param {Boolean} strict\n   */\n  function Environment(logger) {\n    var verbose = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    var strict = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    (0, _classCallCheck3.default)(this, Environment);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, (Environment.__proto__ || (0, _getPrototypeOf2.default)(Environment)).call(this));\n\n    _this.logger = logger;\n    _this.verbose = verbose;\n    _this.strict = strict;\n\n    _this.on('error', function (error) {\n      var friendlyErrors = [errors.SassDocError, _sassConvert2.default.BinaryError, _sassConvert2.default.VersionError];\n\n      if ((0, _find2.default)(friendlyErrors, function (c) {\n        return error instanceof c;\n      })) {\n        logger.error(error.message);\n      } else {\n        if (_utils.is.error(error) && 'stack' in error) {\n          logger.error(error.stack);\n        } else {\n          logger.error(error);\n        }\n      }\n    });\n\n    if (strict) {\n      _this.on('warning', function (warning) {\n        return _this.emit('error', warning);\n      });\n    } else {\n      _this.on('warning', function (warning) {\n        return logger.warn(warning.message);\n      });\n    }\n    return _this;\n  }\n\n  /**\n   * @param {Object|String} config\n   */\n\n\n  (0, _createClass3.default)(Environment, [{\n    key: 'load',\n    value: function load(config) {\n      if (!config) {\n        return this.loadDefaultFile();\n      }\n\n      if (_utils.is.string(config)) {\n        return this.loadFile(config);\n      }\n\n      if (_utils.is.plainObject(config)) {\n        return this.loadObject(config);\n      }\n\n      this.emit('error', new errors.SassDocError('Invalid `config` argument, expected string, object or undefined.'));\n    }\n\n    /**\n     * Merge given configuration object, excluding reserved keys.\n     *\n     * @param {Object} config\n     */\n\n  }, {\n    key: 'loadObject',\n    value: function loadObject(config) {\n      var _this2 = this;\n\n      if (this.file) {\n        this.file = _path2.default.resolve(this.file);\n        this.dir = _path2.default.dirname(this.file);\n      }\n\n      (0, _keys2.default)(config).filter(function (key) {\n        return ['verbose', 'strict'].indexOf(key) === -1;\n      }).forEach(function (k) {\n        if (k in _this2) {\n          return _this2.emit('error', new Error('Reserved configuration key `' + k + '`.'));\n        }\n\n        _this2[k] = config[k];\n      });\n    }\n\n    /**\n     * Get the configuration object from given file.\n     *\n     * If the file is not found, emit a warning and fallback to default.\n     *\n     * The `dir` property will be the directory of the given file or the CWD\n     * if no file is given. The configuration paths should be relative to\n     * it.\n     *\n     * The given logger will be injected in the configuration object for\n     * further usage.\n     *\n     * @param {String} file\n     */\n\n  }, {\n    key: 'loadFile',\n    value: function loadFile(file) {\n      this.file = file;\n\n      if (!this.tryLoadCurrentFile()) {\n        this.emit('warning', new errors.Warning('Config file `' + file + '` not found.'));\n        this.logger.warn('Falling back to `.sassdocrc`');\n        this.loadDefaultFile();\n      }\n    }\n\n    /**\n     * Try to load default `.sassdocrc` configuration file, or fallback\n     * to an empty object.\n     */\n\n  }, {\n    key: 'loadDefaultFile',\n    value: function loadDefaultFile() {\n      this.file = '.sassdocrc';\n      this.tryLoadCurrentFile();\n    }\n\n    /**\n     * Post process the configuration to ensure `package` and `theme`\n     * have uniform values.\n     *\n     * The `package` key is ensured to be an object. If it's a string, it's\n     * required as JSON, relative to the configuration file directory.\n     *\n     * The `theme` key, if present and not already a function, will be\n     * resolved to the actual theme function.\n     */\n\n  }, {\n    key: 'postProcess',\n    value: function postProcess() {\n      if (!this.dir) {\n        this.dir = process.cwd();\n      }\n\n      if (!this.dest) {\n        this.dest = 'sassdoc';\n        this.destCwd = true;\n      }\n\n      this.dest = this.resolve(this.dest, this.destCwd);\n      this.displayDest = _path2.default.relative(process.cwd(), this.dest);\n\n      if (!this.package) {\n        this.defaultPackage();\n      }\n\n      if ((0, _typeof3.default)(this.package) !== 'object') {\n        this.loadPackage();\n      }\n\n      if (typeof this.theme !== 'function') {\n        this.loadTheme();\n      }\n    }\n\n    /**\n     * Process `this.package`.\n     */\n\n  }, {\n    key: 'loadPackage',\n    value: function loadPackage() {\n      var file = this.resolve(this.package);\n      this.package = this.tryParseFile(file);\n\n      if (this.package) {\n        return;\n      }\n\n      this.emit('warning', new errors.Warning('Package file `' + file + '` not found.'));\n      this.logger.warn('Falling back to `package.json`.');\n\n      this.defaultPackage();\n    }\n\n    /**\n     * Load `package.json`.\n     */\n\n  }, {\n    key: 'defaultPackage',\n    value: function defaultPackage() {\n      var file = this.resolve('package.json');\n      this.package = this.tryParseFile(file);\n\n      if (this.package) {\n        return;\n      }\n\n      this.logger.warn('No package information.');\n      this.package = {};\n    }\n\n    /**\n     * Process `this.theme`.\n     */\n\n  }, {\n    key: 'loadTheme',\n    value: function loadTheme() {\n      if (this.theme === undefined) {\n        return this.defaultTheme();\n      }\n\n      if (this.theme.indexOf('/') === -1) {\n        return this.tryTheme('sassdoc-theme-' + this.theme);\n      }\n\n      var theme = this.resolve(this.theme, this.themeCwd);\n      this.themeName = this.theme;\n      this.displayTheme = _path2.default.relative(process.cwd(), theme);\n\n      return this.tryTheme(theme);\n    }\n\n    /**\n     * Try to load given theme module, or fallback to default theme.\n     *\n     * @param {String} module\n     */\n\n  }, {\n    key: 'tryTheme',\n    value: function tryTheme(module) {\n      try {\n        require.resolve(module);\n      } catch (err) {\n        this.emit('warning', new errors.Warning('Theme `' + this.theme + '` not found.'));\n        this.logger.warn('Falling back to default theme.');\n        return this.defaultTheme();\n      }\n\n      this.theme = require(module);\n      var str = Object.prototype.toString;\n\n      if (typeof this.theme !== 'function') {\n        this.emit('error', new errors.SassDocError('Given theme is ' + str(this.theme) + ', expected ' + str(str) + '.' // eslint-disable-line comma-spacing\n        ));\n\n        return this.defaultTheme();\n      }\n\n      if (this.theme.length !== 2) {\n        this.logger.warn('Given theme takes ' + this.theme.length + ' arguments, expected 2.');\n      }\n    }\n\n    /**\n     * Load `sassdoc-theme-default`.\n     */\n\n  }, {\n    key: 'defaultTheme',\n    value: function defaultTheme() {\n      try {\n        require.resolve('sassdoc-theme-default');\n      } catch (err) {\n        this.emit('error', new errors.SassDocError('Holy shit, the default theme was not found!'));\n      }\n\n      this.theme = require('sassdoc-theme-default');\n      this.themeName = this.displayTheme = 'default';\n    }\n\n    /**\n     * Try to load `this.file`, and if not found, return `false`.\n     *\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'tryLoadCurrentFile',\n    value: function tryLoadCurrentFile() {\n      var config = this.tryParseFile(this.file);\n\n      if (!config) {\n        return false;\n      }\n\n      this.load(config);\n\n      return true;\n    }\n\n    /**\n     * Try `this.parseFile` and return `false` if an `ENOENT` error\n     * is thrown.\n     *\n     * Other exceptions are passed to the `error` event.\n     *\n     * @param {String} file\n     * @return {*}\n     */\n\n  }, {\n    key: 'tryParseFile',\n    value: function tryParseFile(file) {\n      try {\n        return this.parseFile(file);\n      } catch (e) {\n        if (e.code !== 'ENOENT') {\n          return this.emit('error', e);\n        }\n      }\n\n      return false;\n    }\n\n    /**\n     * Load YAML or JSON from given file.\n     *\n     * @param {String} file\n     * @return {*}\n     */\n\n  }, {\n    key: 'parseFile',\n    value: function parseFile(file) {\n      return _jsYaml2.default.safeLoad(_fs2.default.readFileSync(file, 'utf-8'));\n    }\n\n    /**\n     * Resolve given file from `this.dir`.\n     *\n     * @param {String} file\n     * @param {Boolean} cwd - whether it's relative to CWD (like when\n     *                        defined in CLI).\n     * @return {String}\n     */\n\n  }, {\n    key: 'resolve',\n    value: function resolve(file) {\n      var cwd = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      return _path2.default.resolve(cwd ? process.cwd() : this.dir, file);\n    }\n  }]);\n  return Environment;\n}(_events.EventEmitter);\n\nexports.default = Environment;","/home/travis/build/npmtest/node-npmtest-sassdoc/node_modules/sassdoc/dist/errors.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Warning = exports.SassDocError = undefined;\n\nvar _create = require('babel-runtime/core-js/object/create');\n\nvar _create2 = _interopRequireDefault(_create);\n\nvar _setPrototypeOf = require('babel-runtime/core-js/object/set-prototype-of');\n\nvar _setPrototypeOf2 = _interopRequireDefault(_setPrototypeOf);\n\nvar _from = require('babel-runtime/core-js/array/from');\n\nvar _from2 = _interopRequireDefault(_from);\n\nvar _construct = require('babel-runtime/core-js/reflect/construct');\n\nvar _construct2 = _interopRequireDefault(_construct);\n\nvar _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _extendableBuiltin(cls) {\n  function ExtendableBuiltin() {\n    var instance = (0, _construct2.default)(cls, (0, _from2.default)(arguments));\n    (0, _setPrototypeOf2.default)(instance, (0, _getPrototypeOf2.default)(this));\n    return instance;\n  }\n\n  ExtendableBuiltin.prototype = (0, _create2.default)(cls.prototype, {\n    constructor: {\n      value: cls,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n\n  if (_setPrototypeOf2.default) {\n    (0, _setPrototypeOf2.default)(ExtendableBuiltin, cls);\n  } else {\n    ExtendableBuiltin.__proto__ = cls;\n  }\n\n  return ExtendableBuiltin;\n}\n\nvar SassDocError = exports.SassDocError = function (_extendableBuiltin2) {\n  (0, _inherits3.default)(SassDocError, _extendableBuiltin2);\n\n  function SassDocError(message) {\n    (0, _classCallCheck3.default)(this, SassDocError);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, (SassDocError.__proto__ || (0, _getPrototypeOf2.default)(SassDocError)).call(this, message));\n\n    _this.message = message; // rm when native class support.\n    return _this;\n  }\n\n  (0, _createClass3.default)(SassDocError, [{\n    key: 'name',\n    get: function get() {\n      return 'SassDocError';\n    }\n  }]);\n  return SassDocError;\n}(_extendableBuiltin(Error));\n\nvar Warning = exports.Warning = function (_SassDocError) {\n  (0, _inherits3.default)(Warning, _SassDocError);\n\n  function Warning(message) {\n    (0, _classCallCheck3.default)(this, Warning);\n\n    var _this2 = (0, _possibleConstructorReturn3.default)(this, (Warning.__proto__ || (0, _getPrototypeOf2.default)(Warning)).call(this, message));\n\n    _this2.message = message; // rm when native class support.\n    return _this2;\n  }\n\n  (0, _createClass3.default)(Warning, [{\n    key: 'name',\n    get: function get() {\n      return 'Warning';\n    }\n  }]);\n  return Warning;\n}(SassDocError);","/home/travis/build/npmtest/node-npmtest-sassdoc/node_modules/sassdoc/dist/logger.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.empty = undefined;\n\nvar _toConsumableArray2 = require('babel-runtime/helpers/toConsumableArray');\n\nvar _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nexports.checkLogger = checkLogger;\n\nvar _utils = require('./utils');\n\nvar _errors = require('./errors');\n\nvar errors = _interopRequireWildcard(_errors);\n\nvar _util = require('util');\n\nvar _chalk = require('chalk');\n\nvar _chalk2 = _interopRequireDefault(_chalk);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar chalk = new _chalk2.default.constructor({\n  enabled: process.stderr && process.stderr.isTTY\n});\n\n// Special chars.\nvar chevron = '\\xBB';\nvar checkmark = '\\u2713';\nvar green = chalk.green(chevron);\nvar yellow = chalk.yellow(chevron);\nvar red = chalk.red(chevron);\n\nvar Logger = function () {\n  function Logger() {\n    var verbose = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    var debug = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    (0, _classCallCheck3.default)(this, Logger);\n\n    this.verbose = verbose;\n    this._stderr = process.stderr;\n    this._debug = debug;\n    this._times = [];\n  }\n\n  /**\n   * Log arguments into stderr if the verbose mode is enabled.\n   */\n\n\n  (0, _createClass3.default)(Logger, [{\n    key: 'log',\n    value: function log() {\n      if (this.verbose) {\n        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        var str = _util.format.apply(undefined, [green + ' ' + args.shift()].concat(args));\n        this._stderr.write(str + '\\n');\n      }\n    }\n\n    /**\n     * Always log arguments as warning into stderr.\n     */\n\n  }, {\n    key: 'warn',\n    value: function warn() {\n      for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      var str = _util.format.apply(undefined, [yellow + ' [WARNING] ' + args.shift()].concat(args));\n      this._stderr.write(str + '\\n');\n    }\n\n    /**\n     * Always log arguments as error into stderr.\n     */\n\n  }, {\n    key: 'error',\n    value: function error() {\n      for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n\n      var str = _util.format.apply(undefined, [red + ' [ERROR] ' + args.shift()].concat(args));\n      this._stderr.write(str + '\\n');\n    }\n\n    /**\n     * Init a new timer.\n     * @param {String} label\n     */\n\n  }, {\n    key: 'time',\n    value: function time(label) {\n      this._times[label] = Date.now();\n    }\n\n    /**\n     * End timer and log result into stderr.\n     * @param {String} label\n     * @param {String} format\n     */\n\n  }, {\n    key: 'timeEnd',\n    value: function timeEnd(label) {\n      var format = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '%s: %dms';\n\n      if (!this.verbose) {\n        return;\n      }\n\n      var time = this._times[label];\n      if (!time) {\n        throw new Error('No such label: ' + label);\n      }\n\n      var duration = Date.now() - time;\n\n      var str = (0, _util.format)(chalk.green(checkmark) + ' ' + format, label, duration);\n      this._stderr.write(str + '\\n');\n    }\n\n    /**\n     * Log arguments into stderr if debug mode is enabled (will call all\n     * argument functions to allow \"lazy\" arguments).\n     */\n\n  }, {\n    key: 'debug',\n    value: function debug() {\n      for (var _len4 = arguments.length, args = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n\n      if (!this._debug) {\n        return;\n      }\n\n      args = args.map(function (f) {\n        if (f instanceof Function) {\n          return f();\n        }\n\n        return f;\n      });\n\n      var str = _util.format.apply(undefined, ['' + _chalk2.default.styles.grey.open + chevron + ' [DEBUG] ' + args.shift()].concat((0, _toConsumableArray3.default)(args), [_chalk2.default.styles.grey.close]));\n\n      this._stderr.write(str + '\\n');\n    }\n  }]);\n  return Logger;\n}();\n\nexports.default = Logger;\nvar empty = exports.empty = {\n  log: function log() {},\n  warn: function warn() {},\n  error: function error() {},\n  debug: function debug() {}\n};\n\n/**\n * Checks if given object looks like a logger.\n *\n * If the `debug` function is missing (like for the `console` object),\n * it will be set to an empty function in a newly returned object.\n *\n * If any other method is missing, an exception is thrown.\n *\n * @param {Object} logger\n * @return {Logger}\n * @throws {SassDocError}\n */\nfunction checkLogger(logger) {\n  var methods = ['log', 'warn', 'error'].filter(function (x) {\n    return !(x in logger) || !_utils.is.function(logger[x]);\n  });\n\n  if (methods.length) {\n    var missing = '\"' + methods.join('\\`, \\`') + '\"';\n    var s = methods.length > 1 ? 's' : '';\n\n    throw new errors.SassDocError('Invalid logger, missing ' + missing + ' method' + s);\n  }\n\n  if ('debug' in logger) {\n    return logger;\n  }\n\n  return {\n    log: logger.log,\n    warn: logger.warn,\n    error: logger.error,\n    debug: empty.debug\n  };\n}","/home/travis/build/npmtest/node-npmtest-sassdoc/node_modules/sassdoc/dist/parser.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _keys = require('babel-runtime/core-js/object/keys');\n\nvar _keys2 = _interopRequireDefault(_keys);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _utils = require('./utils');\n\nvar _errors = require('./errors');\n\nvar errors = _interopRequireWildcard(_errors);\n\nvar _annotation = require('./annotation');\n\nvar _annotation2 = _interopRequireDefault(_annotation);\n\nvar _sorter = require('./sorter');\n\nvar _sorter2 = _interopRequireDefault(_sorter);\n\nvar _scssCommentParser = require('scss-comment-parser');\n\nvar _scssCommentParser2 = _interopRequireDefault(_scssCommentParser);\n\nvar _through = require('through2');\n\nvar _through2 = _interopRequireDefault(_through);\n\nvar _concatStream = require('concat-stream');\n\nvar _concatStream2 = _interopRequireDefault(_concatStream);\n\nvar _path = require('path');\n\nvar _path2 = _interopRequireDefault(_path);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Parser = function () {\n  function Parser(env, additionalAnnotations) {\n    (0, _classCallCheck3.default)(this, Parser);\n\n    this.annotations = new _annotation2.default(env);\n    this.annotations.addAnnotations(additionalAnnotations);\n    this.scssParser = new _scssCommentParser2.default(this.annotations.list, env);\n\n    this.scssParser.commentParser.on('warning', function (warning) {\n      env.emit('warning', new errors.Warning(warning.message));\n    });\n  }\n\n  (0, _createClass3.default)(Parser, [{\n    key: 'parse',\n    value: function parse(code, id) {\n      return this.scssParser.parse(code, id);\n    }\n\n    /**\n     * Invoke the `resolve` function of an annotation if present.\n     * Called with all found annotations except with type \"unkown\".\n     */\n\n  }, {\n    key: 'postProcess',\n    value: function postProcess(data) {\n      var _this = this;\n\n      data = (0, _sorter2.default)(data);\n\n      (0, _keys2.default)(this.annotations.list).forEach(function (key) {\n        var annotation = _this.annotations.list[key];\n\n        if (annotation.resolve) {\n          annotation.resolve(data);\n        }\n      });\n\n      return data;\n    }\n\n    /**\n     * Return a transform stream meant to be piped in a stream of SCSS\n     * files. Each file will be passed-through as-is, but they are all\n     * parsed to generate a SassDoc data array.\n     *\n     * The returned stream has an additional `promise` property, containing\n     * a `Promise` object that will be resolved when the stream is done and\n     * the data is fulfiled.\n     *\n     * @param {Object} parser\n     * @return {Object}\n     */\n\n  }, {\n    key: 'stream',\n    value: function stream() {\n      var _this2 = this;\n\n      var deferred = (0, _utils.defer)();\n      var data = [];\n\n      var transform = function transform(file, enc, cb) {\n        // Pass-through.\n        cb(null, file);\n\n        var parseFile = function parseFile(_ref) {\n          var buf = _ref.buf,\n              name = _ref.name,\n              path = _ref.path;\n\n          var fileData = _this2.parse(buf.toString(enc), name);\n\n          fileData.forEach(function (item) {\n            item.file = {\n              path: path,\n              name: name\n            };\n\n            data.push(item);\n          });\n        };\n\n        if (file.isBuffer()) {\n          var args = {\n            buf: file.contents,\n            name: _path2.default.basename(file.relative),\n            path: file.relative\n          };\n\n          parseFile(args);\n        }\n\n        if (file.isStream()) {\n          file.pipe((0, _concatStream2.default)(function (buf) {\n            parseFile({ buf: buf });\n          }));\n        }\n      };\n\n      var flush = function flush(cb) {\n        data = data.filter(function (item) {\n          return item.context.type !== 'unknown';\n        });\n        data = _this2.postProcess(data);\n\n        deferred.resolve(data);\n        cb();\n      };\n\n      var filter = _through2.default.obj(transform, flush);\n      filter.promise = deferred.promise;\n\n      return filter;\n    }\n  }]);\n  return Parser;\n}();\n\nexports.default = Parser;","/home/travis/build/npmtest/node-npmtest-sassdoc/node_modules/sassdoc/dist/annotation/index.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _annotations = require('./annotations');\n\nvar _annotations2 = _interopRequireDefault(_annotations);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar AnnotationsApi = function () {\n  function AnnotationsApi(env) {\n    (0, _classCallCheck3.default)(this, AnnotationsApi);\n\n    this.env = env;\n\n    this.list = {\n      _: { alias: {} }\n    };\n\n    this.addAnnotations(_annotations2.default);\n  }\n\n  /**\n   * Add a single annotation by name\n   * @param {String} name - Name of the annotation\n   * @param {Object} annotation - Annotation object\n   */\n\n\n  (0, _createClass3.default)(AnnotationsApi, [{\n    key: 'addAnnotation',\n    value: function addAnnotation(name, annotation) {\n      var _this = this;\n\n      annotation = annotation(this.env);\n\n      this.list._.alias[name] = name;\n\n      if (Array.isArray(annotation.alias)) {\n        annotation.alias.forEach(function (aliasName) {\n          _this.list._.alias[aliasName] = name;\n        });\n      }\n\n      this.list[name] = annotation;\n    }\n\n    /**\n     * Add an array of annotations. The name of the annotations must be\n     * in the `name` key of the annotation.\n     * @param {Array} annotations - Annotation objects\n     */\n\n  }, {\n    key: 'addAnnotations',\n    value: function addAnnotations(annotations) {\n      var _this2 = this;\n\n      if (annotations !== undefined) {\n        annotations.forEach(function (annotation) {\n          _this2.addAnnotation(annotation().name, annotation);\n        });\n      }\n    }\n  }]);\n  return AnnotationsApi;\n}();\n\nexports.default = AnnotationsApi;","/home/travis/build/npmtest/node-npmtest-sassdoc/node_modules/sassdoc/dist/annotation/annotations/index.js":"'use strict';\n\nmodule.exports = [require('./access.js').default, require('./alias.js').default, require('./author.js').default, require('./content.js').default, require('./deprecated.js').default, require('./example.js').default, require('./group.js').default, require('./ignore.js').default, require('./link.js').default, require('./name.js').default, require('./output.js').default, require('./parameter.js').default, require('./property.js').default, require('./require.js').default, require('./return.js').default, require('./see.js').default, require('./since.js').default, require('./throw.js').default, require('./todo.js').default, require('./type.js').default];","/home/travis/build/npmtest/node-npmtest-sassdoc/node_modules/sassdoc/dist/annotation/annotations/access.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = access;\nfunction access(env) {\n\n  var defaultPrivatePrefixTest = RegExp.prototype.test.bind(/^[_-]/);\n\n  return {\n    name: 'access',\n\n    parse: function parse(text) {\n      return text.trim();\n    },\n    autofill: function autofill(item) {\n      if (item.access !== 'auto') {\n        return;\n      }\n\n      if (env.privatePrefix === false) {\n        return;\n      }\n\n      var testFunc = defaultPrivatePrefixTest;\n\n      if (typeof env.privatePrefix !== 'undefined') {\n        testFunc = RegExp.prototype.test.bind(new RegExp(env.privatePrefix));\n      }\n\n      if (testFunc(item.context.name)) {\n        return 'private';\n      }\n\n      return 'public';\n    },\n    resolve: function resolve(data) {\n      data.forEach(function (item) {\n        // Ensure valid access when not autofilled.\n        if (item.access === 'auto') {\n          item.access = 'public';\n        }\n      });\n    },\n    default: function _default() {\n      return 'auto';\n    },\n\n\n    multiple: false\n  };\n}","/home/travis/build/npmtest/node-npmtest-sassdoc/node_modules/sassdoc/dist/annotation/annotations/alias.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _find = require('babel-runtime/core-js/array/find');\n\nvar _find2 = _interopRequireDefault(_find);\n\nexports.default = alias;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction alias(env) {\n  return {\n    name: 'alias',\n\n    parse: function parse(text) {\n      return text.trim();\n    },\n    resolve: function resolve(data) {\n      data.forEach(function (item) {\n        if (item.alias === undefined) {\n          return;\n        }\n\n        var alias = item.alias;\n        var name = item.context.name;\n\n        var aliasedItem = (0, _find2.default)(data, function (i) {\n          return i.context.name === alias;\n        });\n\n        if (aliasedItem === undefined) {\n          env.logger.warn('Item `' + name + '` is an alias of `' + alias + '` but this item doesn\\'t exist.');\n          delete item.alias;\n          return;\n        }\n\n        if (!Array.isArray(aliasedItem.aliased)) {\n          aliasedItem.aliased = [];\n        }\n\n        aliasedItem.aliased.push(name);\n      });\n    },\n\n\n    allowedOn: ['function', 'mixin', 'variable'],\n\n    multiple: false\n  };\n}","/home/travis/build/npmtest/node-npmtest-sassdoc/node_modules/sassdoc/dist/annotation/annotations/author.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = author;\nfunction author() {\n  return {\n    name: 'author',\n\n    parse: function parse(text) {\n      return text.trim();\n    }\n  };\n}","/home/travis/build/npmtest/node-npmtest-sassdoc/node_modules/sassdoc/dist/annotation/annotations/content.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = content;\nfunction content() {\n  return {\n    name: 'content',\n\n    parse: function parse(text) {\n      return text.trim();\n    },\n    autofill: function autofill(item) {\n      if (!item.content && item.context.code.indexOf('@content') > -1) {\n        return '';\n      }\n    },\n\n\n    allowedOn: ['mixin'],\n\n    multiple: false\n  };\n}","/home/travis/build/npmtest/node-npmtest-sassdoc/node_modules/sassdoc/dist/annotation/annotations/deprecated.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = deprecated;\nfunction deprecated() {\n\n  return {\n    name: 'deprecated',\n\n    parse: function parse(text) {\n      return text.trim();\n    },\n\n\n    multiple: false\n  };\n}","/home/travis/build/npmtest/node-npmtest-sassdoc/node_modules/sassdoc/dist/annotation/annotations/example.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = example;\n/**\n * `@example` is a multiline annotation.\n *\n * Check if there is something on the first line and use it as the type information.\n *\n * @example html - description\n * <div></div>\n */\n\nvar stripIndent = require('strip-indent');\nvar descRegEx = /(\\w+)\\s*(?:-?\\s*(.*))/;\n\nfunction example() {\n  return {\n    name: 'example',\n\n    parse: function parse(text) {\n      var instance = {\n        type: 'scss', // Default to `scss`.\n        code: text\n      };\n\n      // Get the optional type info.\n      var optionalType = text.substr(0, text.indexOf('\\n'));\n\n      if (optionalType.trim().length !== 0) {\n        var typeDesc = descRegEx.exec(optionalType);\n        instance.type = typeDesc[1];\n        if (typeDesc[2].length !== 0) {\n          instance.description = typeDesc[2];\n        }\n        instance.code = text.substr(optionalType.length + 1); // Remove the type\n      }\n\n      // Remove all leading/trailing line breaks.\n      instance.code = instance.code.replace(/^\\n|\\n$/g, '');\n\n      instance.code = stripIndent(instance.code);\n\n      return instance;\n    }\n  };\n}","/home/travis/build/npmtest/node-npmtest-sassdoc/node_modules/sassdoc/dist/annotation/annotations/group.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = group;\nfunction group() {\n  return {\n    name: 'group',\n\n    parse: function parse(text) {\n      return [text.trim().toLowerCase()];\n    },\n    default: function _default() {\n      return ['undefined'];\n    },\n\n\n    multiple: false\n  };\n}","/home/travis/build/npmtest/node-npmtest-sassdoc/node_modules/sassdoc/dist/annotation/annotations/ignore.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = ignore;\nfunction ignore() {\n  return {\n    name: 'ignore',\n\n    parse: function parse() {}\n  };\n}","/home/travis/build/npmtest/node-npmtest-sassdoc/node_modules/sassdoc/dist/annotation/annotations/link.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = link;\nvar linkRegex = /\\s*([^:]+\\:\\/\\/[^\\s]*)?\\s*(.*?)$/;\n\nfunction link() {\n  return {\n    name: 'link',\n\n    parse: function parse(text) {\n      var parsed = linkRegex.exec(text.trim());\n\n      return {\n        url: parsed[1] || '',\n        caption: parsed[2] || ''\n      };\n    },\n\n\n    alias: ['source']\n  };\n}","/home/travis/build/npmtest/node-npmtest-sassdoc/node_modules/sassdoc/dist/annotation/annotations/name.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = name;\nfunction name() {\n  return {\n    name: 'name',\n\n    parse: function parse(text) {\n      return text.trim();\n    },\n\n\n    // Abuse the autofill feature to rewrite the `item.context`\n    autofill: function autofill(item) {\n      if (item.name) {\n        item.context.name = item.name;\n        // Cleanup\n        delete item.name;\n      }\n    },\n\n\n    multiple: false\n  };\n}","/home/travis/build/npmtest/node-npmtest-sassdoc/node_modules/sassdoc/dist/annotation/annotations/output.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = output;\nfunction output() {\n  return {\n    name: 'output',\n\n    parse: function parse(text) {\n      return text.trim();\n    },\n\n\n    alias: ['outputs'],\n\n    allowedOn: ['mixin'],\n\n    multiple: false\n  };\n}","/home/travis/build/npmtest/node-npmtest-sassdoc/node_modules/sassdoc/dist/annotation/annotations/parameter.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = parameter;\nvar typeRegEx = /^\\s*(?:\\{(.*)\\})?\\s*(?:\\$?([^\\s^\\]\\[]+))?\\s*(?:\\[([^\\]]*)\\])?\\s*(?:-?\\s*([\\s\\S]*))?/;\n\nfunction parameter(env) {\n  return {\n    name: 'parameter',\n\n    parse: function parse(text, info, id) {\n      var parsed = typeRegEx.exec(text);\n      var obj = {};\n\n      if (parsed[1]) {\n        obj.type = parsed[1];\n      }\n\n      if (parsed[2]) {\n        obj.name = parsed[2];\n      } else {\n        env.logger.warn('@parameter must at least have a name. Location: ' + id + ':' + info.commentRange.start + ':' + info.commentRange.end);\n        return undefined;\n      }\n\n      if (parsed[3]) {\n        obj.default = parsed[3];\n      }\n\n      if (parsed[4]) {\n        obj.description = parsed[4];\n      }\n\n      return obj;\n    },\n\n\n    alias: ['arg', 'argument', 'arguments', 'param', 'parameters'],\n\n    allowedOn: ['function', 'mixin']\n  };\n}","/home/travis/build/npmtest/node-npmtest-sassdoc/node_modules/sassdoc/dist/annotation/annotations/property.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = property;\nvar reqRegEx = /\\s*(?:\\{(.*)\\})?\\s*(?:(\\$?[^\\s]+))?\\s*(?:\\[([^\\]]*)\\])?\\s*(?:-?\\s*([\\s\\S]*))\\s*$/;\n\nfunction property() {\n  return {\n    name: 'property',\n\n    parse: function parse(text) {\n      var match = reqRegEx.exec(text.trim());\n\n      var obj = {\n        type: match[1] || 'Map'\n      };\n\n      if (match[2]) {\n        obj.name = match[2];\n      }\n\n      if (match[3]) {\n        obj.default = match[3];\n      }\n\n      if (match[4]) {\n        obj.description = match[4];\n      }\n\n      return obj;\n    },\n\n\n    alias: ['prop'],\n\n    allowedOn: ['variable']\n  };\n}","/home/travis/build/npmtest/node-npmtest-sassdoc/node_modules/sassdoc/dist/annotation/annotations/require.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _find = require('babel-runtime/core-js/array/find');\n\nvar _find2 = _interopRequireDefault(_find);\n\nexports.default = require_;\n\nvar _utils = require('../../utils');\n\nvar _lodash = require('lodash.uniq');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar reqRegEx = /^\\s*(?:\\{(.*)\\})?\\s*(?:(\\$?[^\\s]+))?\\s*(?:-?\\s*([^<$]*))?\\s*(?:<?\\s*(.*)\\s*>)?$/;\n\nfunction require_(env) {\n  return {\n    name: 'require',\n\n    parse: function parse(text) {\n      var match = reqRegEx.exec(text.trim());\n\n      var obj = {\n        type: match[1] || 'function',\n        name: match[2]\n      };\n\n      obj.external = (0, _utils.splitNamespace)(obj.name).length > 1;\n\n      if (obj.name.indexOf('$') === 0) {\n        obj.type = 'variable';\n        obj.name = obj.name.slice(1);\n      }\n\n      if (obj.name.indexOf('%') === 0) {\n        obj.type = 'placeholder';\n        obj.name = obj.name.slice(1);\n      }\n\n      if (match[3]) {\n        obj.description = match[3].trim();\n      }\n\n      if (match[4]) {\n        obj.url = match[4];\n      }\n\n      return obj;\n    },\n    autofill: function autofill(item) {\n      var type = item.context.type;\n\n      if (type === 'mixin' || type === 'placeholder' || type === 'function') {\n        var handWritten = void 0;\n\n        if (item.require) {\n          handWritten = {};\n\n          item.require.forEach(function (reqObj) {\n            handWritten[reqObj.type + '-' + reqObj.name] = true;\n          });\n        }\n\n        var mixins = searchForMatches(item.context.code, /@include\\s+([^(;$]*)/ig, isAnnotatedByHand.bind(null, handWritten, 'mixin'));\n\n        var functions = searchForMatches(item.context.code, new RegExp('(@include)?\\\\s*([a-z0-9_-]+)\\\\s*\\\\(', 'ig'), // Literal destorys Syntax\n        isAnnotatedByHand.bind(null, handWritten, 'function'), 2 // Get the second matching group instead of 1\n        );\n\n        var placeholders = searchForMatches(item.context.code, /@extend\\s*%([^;\\s]+)/ig, isAnnotatedByHand.bind(null, handWritten, 'placeholder'));\n\n        var variables = searchForMatches(item.context.code, /\\$([a-z0-9_-]+)/ig, isAnnotatedByHand.bind(null, handWritten, 'variable'));\n\n        // Create object for each required item.\n        mixins = mixins.map(typeNameObject('mixin'));\n        functions = functions.map(typeNameObject('function'));\n        placeholders = placeholders.map(typeNameObject('placeholder'));\n        variables = variables.map(typeNameObject('variable'));\n\n        // Merge all arrays.\n        var all = [].concat(mixins, functions, placeholders, variables);\n\n        // Merge in user supplyed requires if there are any.\n        if (item.require && item.require.length > 0) {\n          all = all.concat(item.require);\n        }\n\n        // Filter empty values.\n        all = all.filter(function (x) {\n          return x !== undefined;\n        });\n\n        if (all.length > 0) {\n          all = (0, _lodash2.default)(all, 'name');\n\n          // Filter the item itself.\n          all = all.filter(function (x) {\n            return !(x.name === item.context.name && x.type === item.context.type);\n          });\n\n          return all;\n        }\n      }\n    },\n    resolve: function resolve(data) {\n      data.forEach(function (item) {\n        if (item.require === undefined) {\n          return;\n        }\n\n        item.require = item.require.map(function (req) {\n          if (req.external === true) {\n            return req;\n          }\n\n          var reqItem = (0, _find2.default)(data, function (x) {\n            return x.context.name === req.name && x.context.type === req.type;\n          });\n\n          if (reqItem === undefined) {\n            if (!req.autofill) {\n              env.logger.warn('Item `' + item.context.name + '` requires `' + req.name + '` from type `' + req.type + '` but this item doesn\\'t exist.');\n            }\n\n            return;\n          }\n\n          if (!Array.isArray(reqItem.usedBy)) {\n            reqItem.usedBy = [];\n\n            reqItem.usedBy.toJSON = function () {\n              return reqItem.usedBy.map(function (item) {\n                return {\n                  description: item.description,\n                  context: item.context\n                };\n              });\n            };\n          }\n\n          reqItem.usedBy.push(item);\n          req.item = reqItem;\n\n          return req;\n        }).filter(function (x) {\n          return x !== undefined;\n        });\n\n        if (item.require.length > 0) {\n          item.require.toJSON = function () {\n            return item.require.map(function (item) {\n              var obj = {\n                type: item.type,\n                name: item.name,\n                external: item.external\n              };\n\n              if (item.external) {\n                obj.url = item.url;\n              } else {\n                obj.description = item.description;\n                obj.context = item.context;\n              }\n\n              return obj;\n            });\n          };\n        }\n      });\n    },\n\n\n    alias: ['requires']\n  };\n}\n\nfunction isAnnotatedByHand(handWritten, type, name) {\n  if (type && name && handWritten) {\n    return handWritten[type + '-' + name];\n  }\n\n  return false;\n}\n\nfunction searchForMatches(code, regex, isAnnotatedByHandProxy) {\n  var id = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n\n  var match = void 0;\n  var matches = [];\n\n  while (match = regex.exec(code)) {\n    if (!isAnnotatedByHandProxy(match[id]) && (id <= 1 || match[id - 1] === undefined)) {\n      matches.push(match[id]);\n    }\n  }\n\n  return matches;\n}\n\nfunction typeNameObject(type) {\n  return function (name) {\n    if (name.length > 0) {\n      return {\n        type: type,\n        name: name,\n        autofill: true\n      };\n    }\n  };\n}","/home/travis/build/npmtest/node-npmtest-sassdoc/node_modules/sassdoc/dist/annotation/annotations/return.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = return_;\nvar typeRegEx = /^\\s*(?:\\{(.*)\\})?\\s*(?:-?\\s*([\\s\\S]*))?/;\n\nfunction return_(env) {\n  return {\n    name: 'return',\n\n    parse: function parse(text, info, id) {\n      var parsed = typeRegEx.exec(text);\n      var obj = {};\n\n      if (parsed[1]) {\n        obj.type = parsed[1];\n      } else {\n        env.logger.warn('@return must at least have a type. Location: ' + id + ':' + info.commentRange.start + ':' + info.commentRange.end);\n        return undefined;\n      }\n\n      if (parsed[2]) {\n        obj.description = parsed[2];\n      }\n\n      return obj;\n    },\n\n\n    alias: ['returns'],\n\n    allowedOn: ['function'],\n\n    multiple: false\n  };\n}","/home/travis/build/npmtest/node-npmtest-sassdoc/node_modules/sassdoc/dist/annotation/annotations/see.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _find = require('babel-runtime/core-js/array/find');\n\nvar _find2 = _interopRequireDefault(_find);\n\nexports.default = see;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar seeRegEx = /\\s*(?:\\{([\\w-_]+)\\}\\s*)?(.*)/;\n\nfunction see(env) {\n  return {\n    name: 'see',\n\n    parse: function parse(text) {\n      var match = seeRegEx.exec(text);\n\n      var obj = {\n        type: match[1] || 'function',\n        name: match[2]\n      };\n\n      if (obj.name.indexOf('$') === 0) {\n        obj.type = 'variable';\n        obj.name = obj.name.slice(1);\n      }\n\n      if (obj.name.indexOf('%') === 0) {\n        obj.type = 'placeholder';\n        obj.name = obj.name.slice(1);\n      }\n\n      return obj;\n    },\n    resolve: function resolve(data) {\n      data.forEach(function (item) {\n        if (item.see === undefined) {\n          return;\n        }\n\n        item.see = item.see.map(function (see) {\n          var seeItem = (0, _find2.default)(data, function (x) {\n            return x.context.name === see.name;\n          });\n\n          if (seeItem !== undefined) {\n            return seeItem;\n          }\n\n          env.logger.warn('Item `' + item.context.name + '` refers to `' + see.name + '` from type `' + see.type + '` but this item doesn\\'t exist.');\n        }).filter(function (x) {\n          return x !== undefined;\n        });\n\n        item.see.toJSON = function () {\n          return item.see.map(function (item) {\n            return {\n              description: item.description,\n              context: item.context\n            };\n          });\n        };\n      });\n    }\n  };\n}","/home/travis/build/npmtest/node-npmtest-sassdoc/node_modules/sassdoc/dist/annotation/annotations/since.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = since;\nvar sinceRegEx = /\\s*([^\\s]*)\\s*(?:-?\\s*([\\s\\S]*))?\\s*$/;\n\nfunction since() {\n  return {\n    name: 'since',\n\n    parse: function parse(text) {\n      var parsed = sinceRegEx.exec(text);\n      var obj = {};\n\n      if (parsed[1]) {\n        obj.version = parsed[1];\n      }\n\n      if (parsed[2]) {\n        obj.description = parsed[2];\n      }\n\n      return obj;\n    }\n  };\n}","/home/travis/build/npmtest/node-npmtest-sassdoc/node_modules/sassdoc/dist/annotation/annotations/throw.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = throw_;\n\nvar _lodash = require('lodash.uniq');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar autoParserError = /@error\\s+(?:'|\")([^'\"]+)/g;\n\nfunction throw_() {\n  return {\n    name: 'throw',\n\n    parse: function parse(text) {\n      return text.trim();\n    },\n    autofill: function autofill(item) {\n      var match = void 0;\n      var throwing = item.throws || [];\n\n      while (match = autoParserError.exec(item.context.code)) {\n        throwing.push(match[1]);\n      }\n\n      if (throwing.length > 0) {\n        return (0, _lodash2.default)(throwing);\n      }\n    },\n\n\n    alias: ['throws', 'exception'],\n\n    allowedOn: ['function', 'mixin', 'placeholder']\n  };\n}","/home/travis/build/npmtest/node-npmtest-sassdoc/node_modules/sassdoc/dist/annotation/annotations/todo.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = todo;\nfunction todo() {\n  return {\n    name: 'todo',\n\n    parse: function parse(text) {\n      return text.trim();\n    },\n\n\n    alias: ['todos']\n  };\n}","/home/travis/build/npmtest/node-npmtest-sassdoc/node_modules/sassdoc/dist/annotation/annotations/type.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = type;\nfunction type() {\n  return {\n    name: 'type',\n\n    parse: function parse(text) {\n      return text.trim();\n    },\n\n\n    allowedOn: ['variable'],\n\n    multiple: false\n  };\n}","/home/travis/build/npmtest/node-npmtest-sassdoc/node_modules/sassdoc/dist/sorter.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = sort;\n/**\n * @param {Array} data An array of SassDoc data objects.\n * @return {Array} The sorted data.\n */\nfunction sort(data) {\n  return data.sort(function (a, b) {\n    return compare(a.group[0].toLowerCase(), b.group[0].toLowerCase()) || compare(a.file.path, b.file.path) || compare(a.context.line.start, b.context.line.start);\n  });\n}\n\nfunction compare(a, b) {\n  switch (true) {\n    case a > b:\n      return 1;\n    case a === b:\n      return 0;\n    default:\n      return -1;\n  }\n}","/home/travis/build/npmtest/node-npmtest-sassdoc/node_modules/sassdoc/dist/exclude.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _find = require('babel-runtime/core-js/array/find');\n\nvar _find2 = _interopRequireDefault(_find);\n\nexports.default = exclude;\n\nvar _through = require('through2');\n\nvar _through2 = _interopRequireDefault(_through);\n\nvar _minimatch = require('minimatch');\n\nvar _minimatch2 = _interopRequireDefault(_minimatch);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @param {Array} patterns\n * @return {Object}\n */\nfunction exclude(patterns) {\n  return _through2.default.obj(function (file, enc, cb) {\n    if ((0, _find2.default)(patterns, function (x) {\n      return (0, _minimatch2.default)(file.relative, x);\n    })) {\n      return cb();\n    }\n\n    cb(null, file);\n  });\n}","/home/travis/build/npmtest/node-npmtest-sassdoc/node_modules/sassdoc/dist/recurse.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = recurse;\n\nvar _utils = require('./utils');\n\nvar _path = require('path');\n\nvar _path2 = _interopRequireDefault(_path);\n\nvar _through = require('through2');\n\nvar _through2 = _interopRequireDefault(_through);\n\nvar _vinylFs = require('vinyl-fs');\n\nvar _vinylFs2 = _interopRequireDefault(_vinylFs);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Return a transform stream recursing through directory to yield\n * Sass/SCSS files instead.\n *\n * @return {Object}\n */\nfunction recurse() {\n  return _through2.default.obj(function (file, enc, cb) {\n    var _this = this;\n\n    if (!_utils.is.vinylFile(file)) {\n      // Don't know how to handle this object.\n      return cb(new Error('Unsupported stream object. Vinyl file expected.'));\n    }\n\n    if (file.isBuffer() || file.isStream()) {\n      // Pass-through.\n      return cb(null, file);\n    }\n\n    if (!file.isDirectory()) {\n      // At that stage we want only dirs. Dismiss file.isNull.\n      return cb();\n    }\n\n    // It's a directory, find inner Sass/SCSS files.\n    var pattern = _path2.default.resolve(file.path, '**/*.+(sass|scss)');\n\n    _vinylFs2.default.src(pattern).pipe(_through2.default.obj(function (file, enc, cb) {\n      // Append to \"parent\" stream.\n      _this.push(file);\n      cb();\n    }, function () {\n      // All done.\n      cb();\n    }));\n  });\n}"}